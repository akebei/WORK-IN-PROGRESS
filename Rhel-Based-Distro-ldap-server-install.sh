#!/bin/bash
###############################################################################################################################
# Title: Install and Congure LDAP Server on Rhel 6 for Centralized Authenication
#
# Author: Athanasius C. Kebei
# References:
# https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Deployment_Guide/ch-Directory_Servers.html
# http://www.unixmen.com/setup-directory-serverldap-in-centos-6-4-rhel-6-4/
# http://adminmirror.blogspot.com/p/ldap-server-cleint-configuration-for.html
###############################################################################################################################


###############################################################################################################################
# 1. For full name resolution insert your LDAP Server FQDN in /etc/host file
###############################################################################################################################
cat >> /etc/hosts << EOF
192.168.1.10	ldapserver1.waselinux.net        ldapserver1
EOF

# 1. Install OpenLDAP Server.
yum -y install openldap openldap-servers openldap-clients 

# 2. Backup
cp /etc/sysctl.conf /etc/sysctl.conf.preldap
cp /etc/security/limits.conf /etc/security/limits.conf.preldap
cp /etc/profile /etc/profile.preldap
cp /etc/pam.d/login /etc/pam.d/login.preldap
cp /etc/openldap/slapd.conf  /etc/openldap/slapd.conf.preldap
cp /etc/openldap/slapd.d/*   /etc/openldap/slapd.d/*.preldap/ 

#3. Create pids for openldap
cat > /etc/openldap/slapd.conf << EOF
# create new
pidfile     /var/run/openldap/slapd.pid
argsfile    /var/run/openldap/slapd.args
EOF

# 4. Remove files under slapd.d
rm -rf /etc/openldap/slapd.d/* 
slaptest -f /etc/openldap/slapd.conf -F /etc/openldap/slapd.d             # Response should be: config file testing succeeded 

cat >> /etc/openldap/slapd.d/cn=config/olcDatabase\={0}config.ldif << EOF
# line 4: change
olcAccess:{0}to * by dn.exact=gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth manage by * break
EOF

chown -R ldap. /etc/openldap/slapd.d
chmod -R 700 /etc/openldap/slapd.d  
/etc/rc.d/init.d/slapd start && chkconfig slapd on 

# 5. Configure Slapd. Add core.ldif, cosine.ldif, and nis.ldif files
ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/core.ldif

# You should see the following
# SASL/EXTERNAL authentication started
# SASL username: gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth
# SASL SSF: 0
# adding new entry "cn=core,cn=schema,cn=config"

ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/cosine.ldif

# SASL/EXTERNAL authentication started
# SASL username: gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth
# SASL SSF: 0
# adding new entry "cn=cosine,cn=schema,cn=config"

ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/nis.ldif

# SASL/EXTERNAL authentication started
# SASL username: gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth
# SASL SSF: 0
# adding new entry "cn=nis,cn=schema,cn=config"

ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/inetorgperson.ldif

# SASL/EXTERNAL authentication started
# SASL username: gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth
# SASL SSF: 0
# adding new entry "cn=inetorgperson,cn=schema,cn=config"

#6.  Generate encrypted password
slappasswd -s secret
!C0ntro1 
 !C0ntro1 
# {SSHA}xxxxxxxxxxxxxxxxxxxxxxxx                # You will need this in the backend.ldif

# 7. Create backend.ldif 
cat > backend.ldif << EOF
# create new
# replace the section "dc=***,dc=***" to your own suffix
# replace the section "olcRootPW: ***" to your own password generated by slappasswd above

dn: cn=module,cn=config
objectClass: olcModuleList
cn: module
olcModulepath: /usr/lib64/openldap
olcModuleload: back_hdb

dn: olcDatabase=hdb,cn=config
objectClass: olcDatabaseConfig
objectClass: olcHdbConfig
olcDatabase: {1}hdb
olcSuffix: dc=waselinux,dc=net
olcDbDirectory: /var/lib/ldap
olcRootDN: cn=admin,dc=waselinux,dc=net
olcRootPW: {SSHA}nqzulFOeF8iI5narUzehI1OvGn8D0GGb                  # This should be the slappassword hash generated above

olcDbConfig: set_cachesize 0 2097152 0
olcDbConfig: set_lk_max_objects 1500
olcDbConfig: set_lk_max_locks 1500
olcDbConfig: set_lk_max_lockers 1500
olcDbIndex: objectClass eq
olcLastMod: TRUE
olcMonitoring: TRUE
olcDbCheckpoint: 512 30
olcAccess: to attrs=userPassword by dn="cn=admin,dc=waselinux,dc=net" write by anonymous auth by self write by * none
olcAccess: to attrs=shadowLastChange by self write by * read
olcAccess: to dn.base="" by * read
olcAccess: to * by dn="cn=admin,dc=waselinux,dc=net" write by * read
EOF

# 8 . Put the slappasswd  into backend.ldif and add the backend.ldif entry
# echo -e "olcRootPW: {SSHA}EMCvWr1ZE01rSrp1fmrTGB1nGBPptnqj" >> backend.ldif

ldapadd -Y EXTERNAL -H ldapi:/// -f backend.ldif
# SASL/EXTERNAL authentication started
# SASL username: gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth
# SASL SSF: 0
# adding new entry "cn=module,cn=config"

# adding new entry "olcDatabase=hdb,cn=config"


# 9.  Create frontendldif
cat > frontend.ldif << EOF
# create new
# replace the section "dc=***,dc=***" to your own suffix
# replace the section "userPassword: ***" to your own password generated by slappasswd above

dn: dc=waselinux,dc=net
objectClass: top
objectClass: dcObject
objectclass: organization
o: waselinux net
dc: waselinux

dn: cn=admin,dc=waselinux,dc=net
objectClass: simpleSecurityObject
objectClass: organizationalRole
cn: admin
userPassword: {SSHA}nqzulFOeF8iI5narUzehI1OvGn8D0GGb    

dn: ou=people,dc=waselinux,dc=net
objectClass: organizationalUnit
ou: people

dn: ou=groups,dc=waselinux,dc=net
objectClass: organizationalUnit
ou: groups
EOF

# echo "userPassword: {SSHA}NkDL5iBR2azduV08xR4TWPOqfc68IPgv" >> frontend.ldif

ldapadd -x -D cn=admin,dc=waselinux,dc=net -W -f frontend.ldif

# Enter LDAP Password:
# admin password you set above
#adding new entry "dc=waselinux,dc=net"
#adding new entry "cn=admin,dc=waselinux,dc=net"
# adding new entry "ou=people,dc=waselinux,dc=net"
# adding new entry "ou=groups,dc=waselinux,dc=net"


# 10.  Add a user
cat > ldapuser.ldif << EOF
# create new
# replace the section "dc=***,dc=***" to your own suffix

dn: uid=superme,ou=people,dc=waselinux,dc=net
objectClass: inetOrgPerson
objectClass: posixAccount
objectClass: shadowAccount
uid: superme
cn: superme
sn: superme
userPassword: {SSHA}nqzulFOeF8iI5narUzehI1OvGn8D0GGb
loginShell: /bin/bash
uidNumber: 1000
gidNumber: 1000
homeDirectory: /home/superme

dn: cn=waselinux,ou=groups,dc=waselinux,dc=net
objectClass: posixGroup
cn: superme
gidNumber: 1000
memberUid: superme
EOF

ldapadd -x -D cn=admin,dc=waselinux,dc=net -W -f ldapuser.ldif

# Enter LDAP Password: 
!C0ntro1 
# admin password
!C0ntro1 

# adding new entry "uid=superme,ou=people,dc=superme,dc=waselinux"
# adding new entry "cn=superme,ou=groups,dc=waselinux,dc=net"


# 11. Add Existing local Users to LDAP Directory. 

cat > ldapuser.sh << EOF
# extract local users who have 500-999 digit UID
# replace "SUFFIX=***" to your own suffix
# this is an example

#!/bin/bash
SUFFIX='dc=waselinux,dc=net'
LDIF='ldapuser.ldif'

echo -n > $LDIF
for line in `grep "x:[5-9][0-9][0-9]:" /etc/passwd | sed -e "s/ /%/g"`
do
   UID1=`echo $line | cut -d: -f1`
   NAME=`echo $line | cut -d: -f5 | cut -d, -f1`
   if [ ! "$NAME" ]
   then
      NAME=$UID1
   else
      NAME=`echo $NAME | sed -e "s/%/ /g"`
   fi
   SN=`echo $NAME | awk '{print $2}'`
   if [ ! "$SN" ]
   then
      SN=$NAME
   fi
   GIVEN=`echo $NAME | awk '{print $1}'`
   UID2=`echo $line | cut -d: -f3`
   GID=`echo $line | cut -d: -f4`
   PASS=`grep $UID1: /etc/shadow | cut -d: -f2`
   SHELL=`echo $line | cut -d: -f7`
   HOME=`echo $line | cut -d: -f6`
   EXPIRE=`passwd -S $UID1 | awk '{print $7}'`
   FLAG=`grep $UID1: /etc/shadow | cut -d: -f9`
   if [ ! "$FLAG" ]
   then
      FLAG="0"
   fi
   WARN=`passwd -S $UID1 | awk '{print $6}'`
   MIN=`passwd -S $UID1 | awk '{print $4}'`
   MAX=`passwd -S $UID1 | awk '{print $5}'`
   LAST=`grep $UID1: /etc/shadow | cut -d: -f3`

   echo "dn: uid=$UID1,ou=people,$SUFFIX" >> $LDIF
   echo "objectClass: inetOrgPerson" >> $LDIF
   echo "objectClass: posixAccount" >> $LDIF
   echo "objectClass: shadowAccount" >> $LDIF
   echo "uid: $UID1" >> $LDIF
   echo "sn: $SN" >> $LDIF
   echo "givenName: $GIVEN" >> $LDIF
   echo "cn: $NAME" >> $LDIF
   echo "displayName: $NAME" >> $LDIF
   echo "uidNumber: $UID2" >> $LDIF
   echo "gidNumber: $GID" >> $LDIF
   echo "userPassword: {crypt}$PASS" >> $LDIF
   echo "gecos: $NAME" >> $LDIF
   echo "loginShell: $SHELL" >> $LDIF
   echo "homeDirectory: $HOME" >> $LDIF
   echo "shadowExpire: $EXPIRE" >> $LDIF
   echo "shadowFlag: $FLAG" >> $LDIF
   echo "shadowWarning: $WARN" >> $LDIF
   echo "shadowMin: $MIN" >> $LDIF
   echo "shadowMax: $MAX" >> $LDIF
   echo "shadowLastChange: $LAST" >> $LDIF
   echo >> $LDIF
done
EOF

chmod u+x ldapuser.sh
sh ldapuser.sh


ldapadd -x -D cn=admin,dc=waselinux,dc=net -W -f ldapuser.ldif

# Enter LDAP Password:
!C0ntro1

# admin password
!C0ntro1

# adding new entry "uid=redhat,ou=people,dc=waselinux,dc=net"
# adding new entry "uid=ubuntu,ou=people,dc=waselinux,dc=net"
# adding new entry "uid=debian,ou=people,dc=waselinux,dc=net"
# adding new entry "uid=fedora,ou=people,dc=waselinux,dc=net"


# 12. Add existing local groups to LDAP directory

cat > ldapgroup.sh << EOF
# extract local groups who have 500-999 digit UID
# replace "SUFFIX=***" to your own suffix
# this is an example

#!/bin/bash

SUFFIX='dc=waselinux,dc=net'
LDIF='ldapgroup.ldif'

echo -n > $LDIF
for line in `grep "x:[5-9][0-9][0-9]:" /etc/group`
do
   CN=`echo $line | cut -d: -f1`
   GID=`echo $line | cut -d: -f3`
   echo "dn: cn=$CN,ou=groups,$SUFFIX" >> $LDIF
   echo "objectClass: posixGroup" >> $LDIF
   echo "cn: $CN" >> $LDIF
   echo "gidNumber: $GID" >> $LDIF
   users=`echo $line | cut -d: -f4 | sed "s/,/ /g"`
   for user in ${users} ; do
      echo "memberUid: ${user}" >> $LDIF
   done
   echo >> $LDIF
done
EOF

chmod u+x ldapgroup.sh
sh ldapgroup.sh

# result:
ldapadd -x -D cn=admin,dc=waselinux,dc=net -W -f ldapgroup.ldif

# Enter LDAP Password:
# admin password
!C0ntro1

#adding new entry "cn=redhat,ou=groups,dc=waselinux,dc=net"
# adding new entry "cn=ubuntu,ou=groups,dc=waselinux,dc=net"
# adding new entry "cn=debian,ou=groups,dc=waselinux,dc=net"
# adding new entry "cn=fedora,ou=groups,dc=waselinux,dc=net"

# 13. Create your ldap server's original SSL Certificate to enable TLS comms with client servers
cd /etc/pki/tls/certs && make server.key 

# Enter pass phrase:
!C0ntro1 

Verifying - Enter pass phrase:
# confirm
!C0ntro1 

# Remove passphrase from private key
openssl rsa -in server.key -out server.key 

# Enter pass phrase for server.key:
# input passphrase
!C0ntro1 /r

# The server.csr process begins with
make server.csr 

# Country Name (2 letter code) [XX]:
US

# State or Province Name (full name) [e]:
Virginia

# Locality Name (eg, city) [Default City]:
Leesburg

# Organization Name (eg, company) [Default Company Ltd]:
Ldap-Waselinux
 
# Organizational Unit Name (eg, section) []:
Waselinux
 
# department
# Common Name (eg, your server's hostname) []:
ldap.waselinux.net

#Email Address []:
akebei@waselinux.net

# Please enter the following 'extra' attributes to be sent with your certificate request
# A challenge password []:
!C0ntro1 /r

# set days
openssl x509 -in server.csr -out server.crt -req -signkey server.key -days 3650
chmod 400 server.* 

cp /etc/pki/tls/certs/server.key \
/etc/pki/tls/certs/server.crt \
/etc/pki/tls/certs/ca-bundle.crt \
/etc/openldap/certs/ 


chown ldap. /etc/openldap/certs/server.key \
/etc/openldap/certs/server.crt \
/etc/openldap/certs/ca-bundle.crt 


# 14. If you'd like to delete LDAP User or Group, Do as below. Uncomment and run 
# Delete users
# ldapdelete -x -W -D 'cn=admin,dc=waselinux,dc=net' "uid=superme,ou=people,dc=waselinux,dc=net"
# Enter LDAP Password:
# !C0ntro1 /r

# Delete group
# ldapdelete -x -W -D 'cn=admin,dc=waselinux,dc=net' "cn=superme,ou=groups,dc=waselinux,dc=net"

#Enter LDAP Password:
# !C0ntro1 /r 



#TRoubleshooting
# ldapsearch -x -h <ipaddr> -b '' -s base   # ldapsearch -x -h 192.168.1.12 -b '' -s base
# ldapsearch -x -H ldap://FQDN -b '' -s base   # ldapsearch -x -H ldap://testldap.waselinux.net -b '' -s base
# ldapsearch -xLLL -h <ldapserver> -D '<binduser>' -W  -b '<base>' # ldapsearch -xLLL -h testldap.waselinux.net -D 'admin' -W  -b 

cn=admin,dc=waselinux,dc=net
 
# ldapsearch -xLLL -D '<binduser>' -W  -b '<base>' 



# If Installing 389-admin-setup, fix the following config files first
#Cat >> /etc/sysctl.conf << EOF
# net.ipv4.tcp_keepalive_time = 300
# net.ipv4.ip_local_port_range = 1024 65000
# fs.file-max = 64000
# EOF

# Cat >> /etc/security/limits.conf << EOF
# *               soft     nofile          8192   
# *               hard     nofile          8192
# EOF

# cat >> /etc/profile << EOF
# ulimit -n 8192
# EOF

# cat /etc/pam.d/login << EOF
# session    required     /lib/security/pam_limits.so
# EOF
#END
